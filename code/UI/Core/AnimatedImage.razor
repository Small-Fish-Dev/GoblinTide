@using Sandbox.UI;

@namespace GameJam.UI
@inherits Image

@code {

	private readonly List<Texture> _textures = new();

	private float _changeDelay = 1;
	private int _index;
	private RealTimeUntil _next = 0.5f;

	public void AddTexture( Texture texture )
	{
		_textures.Add( texture );
		Next();
	}

	private void LoadTexture( string src )
	{
		var texture = Texture.Load( FileSystem.Mounted, src );
		if ( texture == null )
		{
			Log.Warning( $"Couldn't load texture @ {src}" );
			return;
		}
		AddTexture( texture );
	}

	public override void Tick()
	{
		base.Tick();

		if ( _next )
			Next();
	}

	private void Next()
	{
		_next = _changeDelay;
		_index++;
		if ( _index >= _textures.Count )
			_index = 0;
		if ( _textures.Count != 0 )
			Texture = _textures[_index];
	}

	public override void SetProperty( string name, string value )
	{
		base.SetProperty( name, value );

		switch ( name )
		{
			case "delay":
				_changeDelay = value.ToFloat( 1 );
				break;
			case "src":
				var fs = FileSystem.Mounted;
				if ( fs.DirectoryExists( value ) )
				{
					// src is a directory
					foreach ( var file in fs.FindFile( value, "*.png" ) )
					{
						LoadTexture( $"{value}/{file}" );
					}
				}
				else if ( fs.FileExists( value ) )
				{
					// src is a file
					LoadTexture( value );
				}
				{
					// src not found
					Log.Warning( $"Texture file / folder @ {value} not found" );
				}

				break;
		}
	}

}
